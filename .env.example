###############################
# Environment Variables Example
# Copy to .env and fill values. Do NOT commit real secrets.
###############################

# Canonical site URL (no trailing slash)
SITE_URL=https://example.com

# Session signing secret (32+ random chars)
SESSION_SIGNING_KEY=change_me_generate_secure_random
# Optional distinct key for role elevation tokens (falls back to SESSION_SIGNING_KEY if unset)
ROLE_SIGNING_KEY=change_me_role_signing_secret

# Key for hashing/truncating IPs / geo classification (HMAC salt)
GEO_HASH_KEY=change_me_geo_hash_secret

# Optional: super-admin key for elevated scan modes
SUPER_ADMIN_KEY=change_me_admin_secret
# Optional: consent stats admin key (separate scope)
CONSENT_ADMIN_KEY=change_me_consent_admin

# Optional: NVD API key for CVE enrichment (https://nvd.nist.gov/developers/request-an-api-key)
NVD_API_KEY=

# Optional: VirusTotal API key for threat intelligence domain reputation (https://www.virustotal.com/)
VIRUSTOTAL_API_KEY=

# Optional: enable OpenCVE enrichment (true/false)
OPENCVE_ENRICH=false
# Optional base URL override for OpenCVE API (default https://app.opencve.io/api)
OPENCVE_API_BASE=
# Optional: API token for OpenCVE (if using authenticated requests; adds Authorization header)
OPENCVE_API_TOKEN=
# Optional: Basic auth username for OpenCVE (used instead of token if both present)
OPENCVE_BASIC_USER=
# Optional: Basic auth password for OpenCVE
OPENCVE_BASIC_PASSWORD=

# Turnstile (if using Cloudflare Turnstile for forms)
TURNSTILE_SITE_KEY=your_site_key
TURNSTILE_SECRET_KEY=your_secret_key

# Cloudflare KV binding names (ensure they match wrangler.toml)
KV_SCANNER_META=SCANNER_META
KV_LEADERBOARD=LEADERBOARD
KV_ANALYTICS=ANALYTICS
KV_RATE_LIMIT=RATE_LIMIT

# D1 Database binding name (future consent/events logging)
D1_DATABASE=DB

# Feature flags (true/false)
FEATURE_CONSENT_D1=false
FEATURE_GEO_CLASSIFICATION=false
FEATURE_WAITLIST=false
FEATURE_AGENT=false

# Verification proof (ed25519 recommended). Generate keypair offline.
# VERIFICATION_PUBKEY = public key (hex/base64) shown in DNS TXT
# VERIFICATION_SIGNATURE = signature over canonical statement (see verification.astro)
VERIFICATION_PUBKEY=
VERIFICATION_SIGNATURE=

# Logging level (debug|info|warn|error)
LOG_LEVEL=info

# Threat intel / analytics optional endpoints
ANALYTICS_WEBHOOK_URL=
ANALYTICS_API_KEY=
SECURITY_RESEARCH_ENDPOINT=
RESEARCH_API_KEY=

###############################
# Notes:
# - Do not commit a populated .env file.
# - Update README when adding new required variables.
# - For production deployments via Cloudflare Pages, set these in project settings.
# - To generate ed25519 keys (Node 19+):
#   node -e "const { generateKeyPairSync, sign } = require('crypto'); const { publicKey, privateKey } = generateKeyPairSync('ed25519'); const msg='I, Joe Whittle (\"Andrey Sergeevich\") assert control over andreysergeevich.me'; const sig = sign(null, Buffer.from(msg), privateKey).toString('base64'); console.log('PUB=', publicKey.export({format:'der',type:'spki'}).toString('base64')); console.log('SIG=', sig);"
################################ End of file
